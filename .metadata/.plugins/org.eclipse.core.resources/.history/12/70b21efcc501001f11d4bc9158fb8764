package prac3;

import java.util.List;

public class RecorridosAG {
	
	public void main(String[] args) {
		GeneralTree<Integer> root = new GeneralTree<>(1);

        // Creamos algunos nodos hijos y los agregamos al nodo raíz
        GeneralTree<Integer> child1 = new GeneralTree<>(2);
        GeneralTree<Integer> child2 = new GeneralTree<>(3);
        GeneralTree<Integer> child3 = new GeneralTree<>(4);

        root.addChild(child1);
        root.addChild(child2);
        root.addChild(child3);

        // Creamos más nodos y los agregamos como hijos de child1
        GeneralTree<Integer> child11 = new GeneralTree<>(5);
        GeneralTree<Integer> child12 = new GeneralTree<>(6);

        child1.addChild(child11);
        child1.addChild(child12);
        
        printTree(root, 0);
	}
	
	public List<Integer> numerosImparesMayoresQuePreOrden (GeneralTree <Integer> a,Integer n){
		List<Integer> lista = null;
		return numerosImparesMayoresQuePreOrdenPrivate(a,n,lista);
	}
	
	private List<Integer> numerosImparesMayoresQuePreOrdenPrivate (GeneralTree <Integer> a,Integer n,List<Integer> l){
		if ((a.getData()%2 != 0) && (a.getData() > n)){
			l.add(a.getData());
		}
		if (a.hasChildren()) {
			List<GeneralTree<Integer>> hijos = a.getChildren();
			for (int i = hijos.size(); i<hijos.size();i++) {
				numerosImparesMayoresQuePreOrdenPrivate(hijos.get(i),n,l);
			}
		}
		return l;
	}
	
}
